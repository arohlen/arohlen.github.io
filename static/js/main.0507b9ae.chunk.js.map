{"version":3,"sources":["images/github-octocat.png","images/flappy.jpg","components/Home.js","components/Portfolio.js","components/Contact.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Component","Portfolio","Container","Row","Col","lg","Card","bg","text","Img","variant","src","flappy","Body","Title","Text","Button","github","Contact","About","App","className","Navbar","collapseOnSelect","expand","Brand","as","NavLink","to","class","Toggle","aria-controls","Collapse","id","Nav","Link","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0507b9ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-octocat.1e6b64cf.png\";","module.exports = __webpack_public_path__ + \"static/media/flappy.86b48214.jpg\";","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <h1>Home</h1>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport github from '../images/github-octocat.png';\r\nimport flappy from '../images/flappy.jpg';\r\n\r\nclass Portfolio extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <h1>Portfolio</h1>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={true}>\r\n                            <Card bg=\"dark\" text=\"white\">\r\n                                <Card.Img variant=\"top\" src={flappy} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Flappy Bird ML</Card.Title>\r\n                                    <Card.Text>\r\n                                    ML project where flappy birds learns to fly with a genetic algorithm.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Check it out</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg={true}>\r\n                            <Card bg=\"dark\" text=\"white\">\r\n                                <Card.Img variant=\"top\" src={github} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Flappy Bird ML</Card.Title>\r\n                                    <Card.Text>\r\n                                    ML project where flappy birds learns to fly with a genetic algorithm.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Check it out</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg={true}>\r\n                            <Card bg=\"dark\" text=\"white\">\r\n                                <Card.Img variant=\"top\" src={github} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Flappy Bird ML</Card.Title>\r\n                                    <Card.Text>\r\n                                    ML project where flappy birds learns to fly with a genetic algorithm.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Check it out</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n\r\n                    \r\n\r\n                    <Row>\r\n                        <Col lg={true}>\r\n                            <Card bg=\"dark\" text=\"white\">\r\n                                <Card.Img variant=\"top\" src={github} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Flappy Bird ML</Card.Title>\r\n                                    <Card.Text>\r\n                                    ML project where flappy birds learns to fly with a genetic algorithm.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Check it out</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg={true}>\r\n                            <Card bg=\"dark\" text=\"white\">\r\n                                <Card.Img variant=\"top\" src={github} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Flappy Bird ML</Card.Title>\r\n                                    <Card.Text>\r\n                                    ML project where flappy birds learns to fly with a genetic algorithm.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Check it out</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg={true}>\r\n                            <Card bg=\"dark\" text=\"white\">\r\n                                <Card.Img variant=\"top\" src={github} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Flappy Bird ML</Card.Title>\r\n                                    <Card.Text>\r\n                                    ML project where flappy birds learns to fly with a genetic algorithm.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Check it out</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n\r\n        \r\n                </Container>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <h1>Contact</h1>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <h1>About me</h1>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;","import React , {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Switch, NavLink} from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport Home from './components/Home';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport About from './components/About';\n\nclass App extends Component{\n\n    render() {\n\n      return (\n\n        <Router>\n\t\t\t\t  <div className=\"App\">\n\t\t\t\t\t  <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"sm\">\n              <Navbar.Brand as={NavLink} to=\"/\">Andreas Rohlén <i class=\"las la-kiwi-bird\"></i></Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Nav.Link as={NavLink} to=\"/\"> <i class=\"las la-home\"></i> Home  </Nav.Link>\n                <Nav.Link as={NavLink} to=\"/portfolio\"> <i class=\"las la-suitcase\"></i> Portfolio  </Nav.Link>\n                <Nav.Link as={NavLink} to=\"/about\"> <i class=\"las la-user\"></i> About me  </Nav.Link>\n                <Nav.Link as={NavLink} to=\"/contact\"> <i class=\"las la-address-book\"></i> Contact  </Nav.Link>\n              </Nav>\n              </Navbar.Collapse>\n\t\t\t\t\t  </Navbar>\n\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/portfolio\" component={Portfolio} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route path=\"/about\" component={About} />\n            </Switch>\n\t\t\t\t  </div>\n        </Router>\n\n      \n      );\n      \n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}